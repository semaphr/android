apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        // For android libraries
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
        // For pure kotlin libraries, in case you have them
        from sourceSets.main.java.srcDirs
        from sourceSets.main.kotlin.srcDirs
    }
}
artifacts {
    archives androidSourcesJar
}

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                // The coordinates of the library, being set from variables that
                // we'll setup later
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID
                version PUBLISH_VERSION

                // Two artifacts, the `aar` (or `jar`) and the sources
                if (project.plugins.findPlugin("com.android.library")) {
                    from components.envProdRelease
                } else {
                    from components.java
                }

                artifact androidSourcesJar
//                artifacts javaDocJar

                // Mostly self-explanatory metadata
                pom {
                    name = PUBLISH_ARTIFACT_ID
                    description = "All-in-one kill switch for your mobile apps. With semaphr, you can force users to update to the latest version of your mobile apps, encourage app updates, or alert them of any issues with the app."
                    url = 'https://github.com/semaphr/android'
                    licenses {
                        license {
                            name = 'Licenses Apache 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'razvan.chelemen'
                            name = 'Chelemen Razvan'
                            email = 'razvan@appssemble.com'
                        }
                    }

                    // Version control info
                    scm {
                        connection = 'scm:git:git://github.com/semaphr/android.git'
                        developerConnection = 'scm:git:ssh://git@github.com/semaphr/android.git'
                        url = 'http://github.com/semaphr/android/'
                    }
                }

            }
        }
    }
}

signing {
    useInMemoryPgpKeys(
            rootProject.ext["signing.keyId"],
            rootProject.ext["signing.key"],
            rootProject.ext["signing.password"]
    )
    sign publishing.publications
}